Docker 允许你在容器内运行应用程序， 使用 docker run 命令来在容器内运行一个应用程序。Docker首先从本地主机上查找镜像是否存在，如果不存在，Docker 就会从镜像仓库 Docker Hub 下载公共镜像。
docker的两个参数 -i -t，让docker运行的容器实现"对话"的能力,-t:在新容器内指定一个伪终端或终端。-i:允许你对容器内的标准输入 (STDIN) 进行交互。
容器有在运行，可以通过 docker ps 
用 docker 构建一个 web 应用程序。我们将在docker容器中运行一个 Python Flask 应用来运行一个web应用。runoob@runoob:~# docker run -d -P training/webapp python app.py。-d:让容器在后台运行。-P:将容器内部使用的网络端口映射到我们使用的主机上。
通过docker ps 命令可以查看到容器的端口映射，docker还提供了另一个快捷方式：docker port,使用 docker port 可以查看指定 （ID或者名字）容器的某个确定端口映射到宿主机的端口号。docker port 7a38a1ad55c6
使用 docker inspect 来查看Docker的底层信息。它会返回一个 JSON 文件记录着 Docker 容器的配置和状态信息。runoob@runoob:~$ docker inspect determined_swanson
停止WEB应用容器runoob@runoob:~$ docker stop determined_swanson   
重启WEB应用容器已经停止的容器，我们可以使用命令 docker start 来启动。runoob@runoob:~$ docker start determined_swanson
移除WEB应用容器我们可以使用 docker rm 命令来删除不需要的容器runoob@runoob:~$ docker rm determined_swanson ， 删除容器时，容器必须是停止状态，否则会报如下错误
使用 docker images 来列出本地主机上的镜像。同一仓库源可以有多个 TAG，代表这个仓库源的不同个版本
使用 docker pull 命令获取一个新的镜像
从 Docker Hub 网站来搜索镜像，Docker Hub 网址为： https://hub.docker.com/ 我们也可以使用 docker search 命令来搜索镜像。比如我们需要一个httpd的镜像来作为我们的web服务。我们可以通过 docker search 命令搜索 httpd 来寻找适合我们的镜像。runoob@runoob:~$  docker search httpd
当我们从docker镜像仓库中下载的镜像不能满足我们的需求时，我们可以通过以下两种方式对镜像进行更改。1.从已经创建的容器中更新镜像，并且提交这个镜像2.使用 Dockerfile 指令来创建一个新的镜像
runoob@runoob:~$ docker commit -m="has update" -a="runoob" e218edb10161 runoob/ubuntu:v2，各个参数说明：-m:提交的描述信息-a:指定镜像作者e218edb10161：容器ID runoob/ubuntu:v2:指定要创建的目标镜像名
使用命令 docker build ， 从零开始来创建一个新的镜像。为此，我们需要创建一个 Dockerfile 文件,每一个指令都会在镜像上创建一个新的层，每一个指令的前缀都必须是大写的。第一条FROM，指定使用哪个镜像源;RUN 指令告诉docker 在镜像内执行命令，安装了什么。。。然后，我们使用 Dockerfile 文件，通过 docker build 命令来构建一个镜像。runoob@runoob:~$ docker build -t runoob/centos:6.7 .;-t ：指定要创建的目标镜像名;. ：Dockerfile 文件所在目录，可以指定Dockerfile 的绝对路径
使用 docker tag 命令，为镜像添加一个新的标签。runoob@runoob:~$ docker tag 860c279d2fec runoob/centos:dev
























