-------------------------------
客户主机:192.168.4.100  eth0
-------------------------------
代理主机:192.168.4.5    eth0
         192.168.2.5   eth1
--------------------------------
Web主机: 192.168.2.100  eth1
--------------------------------
#clone-vm
#配置yum

代理主机：
#yum -y install squid
#vim  /etc/squid/squid.conf
59:http_access allow all  访问控制
61:visible_hostname abc   主机名
62:http_port 3128   端口
66:cache_dir ufs /var/spool/squid 100 16 256
缓存,缓存目录为/var/spool/squid
    缓存大小为100M
    一级目录为16个，二级目录256个
#service squid start
#ls /var/spool/squid



Web主机
#yum -y install httpd
#echo "test" > /var/www/html/index.html
#service httpd start


客户端验证
#curl http://192.168.2.100  失败
#curl --proxy1.0 192.168.4.5:3128 http://192.168.2.100/   成功

#firefox-->alt键---编辑--首选项---高级---网络--设置--》代理IP和端口



在代理服务器上查看日志
#tail /var/log/squid/access.log

在web服务器上查看日志
#tail /var/log/httpd/access_log



+++++++++++++++++++++++++++
反向代理

1.代理设置:
#vim /etc/squid/squid.conf
62:http_port 80 vhost
63:cache_peer 192.168.2.100 parent
 80 0 originserver
#service squid restart

客户端验证：
#curl http://192.168.2.100 失败
#curl http://192.168.4.5  成功


++++++++++++++++++++++++++++++
Squid访问控制ACL

先定义ACL4rr

调用ACL

定义：
acl  名称  类型   内容
acl  abc   time  17:00-18:00
acl  qq    src   192.168.4.100
调用：
http_access allow|deny 名称
http_access allow abc
http_access deny qq


#vim /etc/squid/squid.conf
acl myip  src 192.168.4.254
http_access deny myip

acl mytime time MTWHF 00:00-18:00
http_access deny mytime

#注意写在别的规则上面
#service squid restart


acl sh url_regex .*.(mp4|flv)
http_access deny sh
限制浏览视频

domain域名

栗子：
acl myip src 192.168.4.5
acl ip2  src 192.168.4.10
acl mynet src 192.168.4.0/24
acl mytime time MTWHF 09:00-18:00
加星期字母标识，
http_access allow  mynet  mytime
可写多个名字
http_access allow myip
http_access deny all


未设置任何规则时，拒绝所有访问请求
已设置规则时，依次进行检查，找到匹配即停止，否则采用与最后一条规则相反的权限



+++++++++++++++++++++++++++++++
Varnish[反向代理,缓存基于内存或文件]

下载软件包
#tar -xf lnmp_soft-2016-7-20.tar.gz
#cd lnmp_soft
#install_lnmp.sh  选择7

配置文件：
主配置文件(定义前端配置)
#vim /etc/sysconfig/varnish
66:ARNISH_LISTEN_PORT=80
76:VARNISH_MIN_THREADS=50最小线程数
79:VARNISH_MAX_THREADS=1000 最大
89:VARNISH_STORAGE_SIZE=64M 缓存大小
92:VARNISH_STORAGE="malloc,${VARNISH_STORAGE_SIZE}"
使用内存缓存页面，内存大小为64M



主配置文件(定义后台服务器)
#vim /etc/varnish/default.vcl
backend default {
     .host = "192.168.2.100";
     .port = "80";
 }
密码文件
#uuidgen > /etc/varnish/secret

#service  varnish start
----------------------------------------------------------------

如何管理varnish的缓存内容

1.修改Apache页面
#echo "ccc" > /var/www/html/b.html

2.客户端访问代理(获取旧的页面内容)

3.代理(链接/usr/local/varnish/bin)
#varnishadm -T 127.0.0.1:6082 -S /etc/varnish/secret  ban.url b.html

4.客户端再访问，获取新的页面内容



THREADS进程数
storage缓存


两个日志结合看


